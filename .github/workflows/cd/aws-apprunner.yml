name: Deploy to AWS

on:
  # push:
  #   branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: "Configure AWS Credentials"
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_IAM_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_IAM_ACCESS_KEY_SECRET }}
        aws-region: ${{ secrets.AWS_REGION }}
    
    - name: "Amazon ECR Login"
      uses: aws-actions/amazon-ecr-login@v1
    
    - uses: actions/checkout@v2

    - name: "Create .env file"
      run: |
        cat << EOF > .env
        PORT=8080
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        DB_HOST=${{ secrets.DB_HOST }}
        DB_USER=${{ secrets.DB_USER }}
        DB_PWD=${{ secrets.DB_PWD }}
        DB_PORT=${{ secrets.DB_PORT }}
        DISCORD_CLIENT_SECRET=${{ secrets.DISCORD_CLIENT_SECRET }}
        TWITCH_CLIENT_SECRET=${{ secrets.TWITCH_CLIENT_SECRET }}
        GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
        MICROSOFT_CLIENT_SECRET=${{ secrets.MICROSOFT_CLIENT_SECRET }}
        FACEBOOK_CLIENT_SECRET=${{ secrets.FACEBOOK_CLIENT_SECRET }}
        EOF

    - name: "Build, tag, and push image to Amazon ECR"
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: nestjs-api
        IMAGE_TAG: ${{ github.sha }}
      run: |
        yarn install
        yarn build
        docker build -t nestjs-api .
        docker tag nestjs-api:latest ${{ secrets.AWS_IAM_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/nestjs-api:latest
        docker push ${{ secrets.AWS_IAM_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/nestjs-api:latest
